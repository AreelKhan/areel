---
import TableOfContentsHeading from "./TableOfContentsHeading.astro";
export interface RawHeading {
  depth: number;
  slug: string;
  text: string;
}

export interface TocHeading extends RawHeading {
  subheadings: TocHeading[];
}

// https://kld.dev/building-table-of-contents/
const { headings } = Astro.props;
const toc = buildToc(headings);

function buildToc(rawHeadings: RawHeading[]): TocHeading[] {
  const toc: TocHeading[] = [];
  const stack: TocHeading[] = [];

  rawHeadings.forEach((raw) => {
    const node: TocHeading = { ...raw, subheadings: [] };

    while (stack.length > 0 && stack[stack.length - 1].depth >= node.depth) {
      stack.pop();
    }

    if (stack.length === 0) {
      toc.push(node);
    } else {
      stack[stack.length - 1].subheadings.push(node);
    }

    stack.push(node);
  });

  return toc;
}
---

<details
  open
  class="animate rounded-lg border border-black/15 dark:border-white/20"
>
  <summary>Table of Contents</summary>
  <nav class="">
    <ul class="py-3">
      {toc.map((heading) => <TableOfContentsHeading heading={heading} />)}
    </ul>
  </nav>
</details>

<style>
  summary {
    @apply cursor-pointer rounded-t-lg px-3 py-1.5 font-medium transition-colors;
  }

  summary:hover {
    @apply bg-black/5 dark:bg-white/5;
  }

  details[open] summary {
    @apply bg-black/5 dark:bg-white/5;
  }
</style>
