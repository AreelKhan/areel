---
import { type CollectionEntry, getCollection } from "astro:content";
import Layout from "@layouts/Layout.astro";
import Container from "@components/Container.astro";
import FormattedDate from "@components/FormattedDate.astro";
import { readingTime } from "@lib/utils";
import BackToPrevious from "@components/BackToPrevious.astro";
import PostNavigation from "@components/PostNavigation.astro";
import TableOfContents from "@components/TableOfContents.astro";
import Giscus from "@components/Giscus.astro";
import ArrowCard from "@components/ArrowCard.astro";
import { TAGS } from "@consts";

export async function getStaticPaths() {
    const posts = await getCollection('blog');
    const tags = posts.flatMap((post) => post.data.tags);
    return tags.map((tag) => ({
        params: { slug: tag },
        props: { tag, posts: posts.filter((post) => post.data?.tags?.includes(tag as string)) },
    }));
}

const { tag, posts } = Astro.props;
type Props = CollectionEntry<'blog'>;
---

<Layout title={`Posts tagged with "${tag}"`} description={`A collection of posts tagged with ${tag}.`}>
  <Container>
    <aside data-pagefind-ignore>
      <div class="space-y-10">
        <div class="animate font-semibold text-black dark:text-white">
         Tag: #{tag}
        </div>
        <div class="space-y-4">
          {
            posts.map((post: Props) => (
              <section class="animate space-y-4" key={post.id}>
                <div>
                  <ul class="not-prose flex flex-col gap-4">
                      <li>
                        <ArrowCard entry={post} />
                      </li>
                  </ul>
                </div>
              </section>
            ))
          }
        </div>
      </div>
    </aside>
  </Container>
</Layout>
